stats:
  enabled: false

serviceAccount:
  create: false

frontend:
  enabled: false 

userOpsIndexer:
  enabled: false 

config:
  prometheus:
    enabled: false
  network:
    id: 1337
    name: quorum
    shortname: quorum
    currency:
      name: Ether
      symbol: ETH 
      decimals: 18
      dualToken: false
  account:
    enabled: false
  testnet: false 

blockscout:
  enabled: true
  ## Image parametes
  ##
  image:
    repository: blockscout/blockscout
    pullPolicy: IfNotPresent
    tag: "latest"
  ## Init container configuration (used to run DB migrations)
  ##
  init:
    enabled: true
    command:
      - /bin/sh
    args:
      - -c
      - bin/blockscout eval "Elixir.Explorer.ReleaseTasks.create_and_migrate()"
  resources:
    limits:
      cpu: 2
      memory: 4Gi
    requests:
      cpu: 1
      memory: 2Gi
  service:
    type: ClusterIP
    port: 4000
  tls:
    enabled: false
  separateApi:
    enabled: false
    replicaCount: 1
  replicaCount: 1
  podSecurityContext: {}
  ## Blockscout ENV vars
  ## ref: https://docs.blockscout.com/for-developers/information-and-settings/env-variables
  ##
  env:
    #DATABASE_URL: postgres://postgres:uk2R1dxL3o@postgresql.eval-q-14.svc.cluster.local:5432/postgres?ssl=false
    DATABASE_URL: postgres://postgres:A8Cs12a3l7@postgresql.xplor-01.svc.cluster.local:5432/postgres?ssl=false
    ETHEREUM_JSONRPC_VARIANT: geth
    ETHEREUM_JSONRPC_HTTP_URL: http://goquorum-node-validator-2.obi-quorum.svc.cluster.local:8545 #http://goquorum-node-validator-2:8545
    ETHEREUM_JSONRPC_TRACE_URL: http://goquorum-node-validator-3.obi-quorum.svc.cluster.local:8545 #http://goquorum-node-validator-3:8545
    ## ---- ##
    # MICROSERVICE_SC_VERIFIER_ENABLED: true
    # MICROSERVICE_SC_VERIFIER_TYPE: sc_verifier
    # MICROSERVICE_SC_VERIFIER_URL: http://verification-verification-app.xplor-00.svc.cluster.local:3000
    ## ---- ##
  extraEnv: []
  ## Command to start blockscout instance
  ##
  command:
    - /bin/sh
  args:
    - -c
    - bin/blockscout start
  envFromSecret: []
  envFrom: []
  securityContext: {}
  readinessProbe:
    enabled: true
    path: /api/v1/health/readiness
    params:
      initialDelaySeconds: 60
      periodSeconds: 10
      timeoutSeconds: 60
  livenessProbe:
    enabled: true
    path: /api/v1/health/liveness
    params:
      initialDelaySeconds: 100
      periodSeconds: 100
      timeoutSeconds: 30
  terminationGracePeriodSeconds: 300
  # REPLACE INGRESS
  # ingress:
  #   enabled: false
  #   className: ""
  #   annotations: {}
  #   hostname: chart-example-stats.local
  #   tls:
  #     enabled: false
  #     #secretName:
  #   paths:
  #     - path: /
  #       pathType: Prefix
  ingress:
    enabled: true
    className: ""
    annotations:
      kubernetes.io/ingress.class: alb
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/target-type: ip
      alb.ingress.kubernetes.io/rewrite-target: /
    hostname: ""
    tls:
      enabled: false
    paths:
      - path: /
        pathType: Prefix

podAnnotations: {}
imagePullSecrets: []

